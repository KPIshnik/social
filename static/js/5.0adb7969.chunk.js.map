{"version":3,"sources":["components/loginPage/LoginPage.jsx"],"names":["LoginForm","props","onSubmit","handleSubmit","component","Input","type","name","validate","required","maxLength50","error","className","style","formError","reduxForm","form","connect","state","isLoggedIn","auth","userID","id","login","to","loginData"],"mappings":"+LAQIA,EAAY,SAACC,GACf,OACE,uBAAMC,SAAUD,EAAME,aAAtB,UACE,yCAEE,cAAC,IAAD,CACEC,UAAWC,IACXC,KAAK,OACLC,KAAK,QACLC,SAAU,CAACC,IAAUC,UAGzB,4CAEE,cAAC,IAAD,CACEN,UAAWC,IACXC,KAAK,WACLC,KAAK,WACLC,SAAU,CAACC,IAAUC,UAGzB,gCACE,cAAC,IAAD,CAAON,UAAU,QAAQE,KAAK,WAAWC,KAAK,eADhD,kBAICN,EAAMU,OAAS,qBAAKC,UAAWC,IAAMC,UAAtB,SAAkCb,EAAMU,QACxD,8BACE,wBAAQL,KAAK,SAAb,yBAMRN,EAAYe,YAAU,CACpBC,KAAM,SADID,CAETf,GAyBYiB,uBANS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAME,KAAKD,WACvBE,OAAQH,EAAME,KAAKE,MAGiB,CAAEC,WAA3BN,EAvBf,SAAmBhB,GAKjB,OAAIA,EAAMkB,YAAclB,EAAMoB,OACrB,cAAC,IAAD,CAAUG,GAAG,aAIpB,gCACE,uCACA,cAACxB,EAAD,CAAWE,SAXf,SAAkBuB,GAChBxB,EAAMsB,MAAME","file":"static/js/5.0adb7969.chunk.js","sourcesContent":["import { Field, reduxForm } from \"redux-form\";\nimport { Input } from \"../common/formControls\";\nimport { maxLength50, required } from \"../common/validation\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../state/authReducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from \"../common/formControls.module.css\";\n\nlet LoginForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        email:\n        <Field\n          component={Input}\n          type=\"text\"\n          name=\"email\"\n          validate={[required, maxLength50]}\n        />\n      </div>\n      <div>\n        Password:\n        <Field\n          component={Input}\n          type=\"password\"\n          name=\"password\"\n          validate={[required, maxLength50]}\n        />\n      </div>\n      <div>\n        <Field component=\"input\" type=\"checkbox\" name=\"rememberMe\" /> remember\n        me\n      </div>\n      {props.error && <div className={style.formError}>{props.error}</div>}\n      <div>\n        <button type=\"submit\">login</button>\n      </div>\n    </form>\n  );\n};\n\nLoginForm = reduxForm({\n  form: \"login\",\n})(LoginForm);\n\nfunction LoginPage(props) {\n  function onSubmit(loginData) {\n    props.login(loginData);\n  }\n\n  if (props.isLoggedIn && props.userID) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  return (\n    <div>\n      <h1>LOGIN</h1>\n      <LoginForm onSubmit={onSubmit} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n    userID: state.auth.id,\n  };\n};\nexport default connect(mapStateToProps, { login })(LoginPage);\n"],"sourceRoot":""}